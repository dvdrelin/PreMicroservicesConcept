// <auto-generated />
using System;
using Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.DbContext.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Model.Patient", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<Guid?>("MainProviderProviderId")
                        .HasColumnType("uuid");

                    b.HasKey("PatientId");

                    b.HasIndex("MainProviderProviderId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Data.Model.Procedure", b =>
                {
                    b.Property<Guid>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Data.Model.Provider", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Data.Model.Treatment", b =>
                {
                    b.Property<Guid>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Fee")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProcedureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.HasKey("TreatmentId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProcedureId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Data.Model.Patient", b =>
                {
                    b.HasOne("Data.Model.Provider", "MainProvider")
                        .WithMany()
                        .HasForeignKey("MainProviderProviderId");

                    b.Navigation("MainProvider");
                });

            modelBuilder.Entity("Data.Model.Treatment", b =>
                {
                    b.HasOne("Data.Model.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.Procedure", "Procedure")
                        .WithMany("Treatments")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.Provider", "Provider")
                        .WithMany("Treatments")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Procedure");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Data.Model.Procedure", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("Data.Model.Provider", b =>
                {
                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
